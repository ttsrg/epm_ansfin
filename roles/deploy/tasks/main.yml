---
- name: create temp dir for deploy
  file:
    path: /tmp/{{student}}
    state: directory

- name: Get numfer of  last artifact
  shell: curl -X GET {{lastartifact}}
  register: build
  args:
    warn: false

- name: download and extract artifact from archiv
  unarchive:
    src: "http://nexus-ci.playpit.by/repository/MNT-pipeline-training/{{student}}/pipeline-{{student}}/{{build.stdout}}/pipeline-{{student}}-{{build.stdout }}.tar.gz"
    dest: /tmp/{{student}}
    remote_src: yes
  become: yes


#- name: check file
#  shell: ls -la /etc/ansible/facts.d/tomcatdeploy.fact
#  ignore_errors: yes
#  register: out

#- name: check stableversion in fact via ls
#  shell: cat /etc/ansible/facts.d/tomcatdeploy.fact | jq '.tomcat_build'| tr -d \"
#  register: stablebuild 
#  when: out.rc == 0


- name: check file tomcatfact exists
  stat:
    path: /etc/ansible/facts.d/tomcatdeploy.fact
  register: tomcatfact

- debug: var=tomcatfact
- debug: var=stablebuild.stdout

- name: check stableversion in fact
  shell: cat /etc/ansible/facts.d/tomcatdeploy.fact | jq '.tomcat_build'| tr -d \"
  register: stablebuild
  when: tomcatfact.stat.exists == true


- name: deploy using custom module 
  block:
#   - command: /bin/false
   - deploy_bash: action=deploy student={{student}} tomuser=stit tompass=stit tomserver={{tomserver}} war={{build.stdout}}
   - set_fact:
       last_tomcat_build: "{{build.stdout }}"
       stablebuild: "{{build.stdout }}"
#  notify:  save deploy fact
   
 
  rescue:
   - deploy_bash: action=deploy student={{student}} tomuser=stit tompass=stit tomserver={{tomserver}} war={{stablebuild.stdout}}
   - set_fact:
       last_tomcat_build: "{{stablebuild.stdout}}"
#   - notify: save rescue fact


- name: save tomcat deploy fact
  copy:
    content: |
      {
            "installed": "{{ ansible_date_time.iso8601 }}",
            "tomcat_build": "{{ last_tomcat_build }}"
      }
    dest: /etc/ansible/facts.d/tomcatdeploy.fact
  become: yes


- debug: var=last_tomcat_build

# it's for me  
# https://help.sonatype.com/repomanager3/rest-and-integration-api/search-api
#curl -X GET "${NEXUS_URL}/service/rest/v1/search/assets?repository=${MAVEN_REPO}&maven.groupId=${GROUP_ID}&maven.artifactId=${ARTIFACT_ID}&maven.baseVersion=${VERSION}&maven.extension=${FILE_EXTENSION}" -H  "ac
#curl -X GET http://nexus-ci.playpit.by/service/rest/v1/search/assets?group=stit&maven.extension=tar.gz -H  "accept: application/json"
# curl -X  GET "http://nexus-ci.playpit.by/service/rest/v1/search/assets?group=stit&maven.extension=tar.gz" -H  "accept: application/json"  | jq -rc '.items[].downloadUrl'| sort -r | head -1| cut -f 8 -d '/'

#    src: http://nexus-ci.playpit.by/repository/MNT-pipeline-training/stit/pipeline-stit/132/pipeline-stit-132.tar.gz
#           src: http://nexus-ci.playpit.by/repository/MNT-pipeline-training/stit/pipeline     -stit         /132       /pipeline-    stit       -132.tar.gz
#    src: "http://nexus-ci.playpit.by/repository/MNT-pipeline-training/{{student}}/pipeline-{{student}}/{{build.stdout}}/pipeline-{{student}}-{{build.stdout }}.tar.gz"
  